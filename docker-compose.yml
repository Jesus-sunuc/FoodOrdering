services:
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fastapi-backend
    ports:
      - "8000:8000"
    env_file:
      - ./api/.env
    volumes:
      - ./api:/app
      - ./logs:/var/log/api
    depends_on:
      - client
    restart: always
  
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8000/api
    container_name: react-frontend
    ports:
      - "4173:4173"
    stdin_open: true
    tty: true
    restart: always

  db:
    image: postgres:latest
    container_name: db-postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    environment:
      POSTGRES_USER: lunchbox
      POSTGRES_PASSWORD: PleaseDoNotLeakMe!
      POSTGRES_DB: postgres
      pgdata: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
  
  loki:
    image: grafana/loki:latest


  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    ports:
      - "4317:4317"
      - "8889:8889"
    volumes:
      - ./configs/otel-config.yaml:/etc/otel/config.yaml
      - ./logs:/var/log/api
    command: ["--config=/etc/otel/config.yaml"]
    depends_on:
      - loki
      - prometheus
      - zipkin
    restart: always

  grafana:
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

    image: grafana/grafana:latest
    ports:
      - "8899:3000"
    volumes:
      - ./configs/grafana-datasource.yml:/etc/grafana/provisioning/datasources/ds.yaml
    depends_on:
      - loki
    restart: always
  
  prometheus:
    image: prom/prometheus
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mem
    ports:
      - 9411:9411

volumes:
  pgdata: